{"ast":null,"code":"import axios from\"axios\";import{setAlert}from\"./alert\";import{REGISTER_SUCCESS,REGISTER_FAIL,STUDENT_LOADED,FACULTY_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_PROFILE}from\"./types\";import setAuthToken from\"../utils/setAuthToken\";// Load User\nexport const loadStudent=()=>async dispatch=>{if(localStorage.token){setAuthToken(localStorage.token);}try{const res=await axios.get(\"/api/student/current\");console.log(\"inside load\");console.log(res.data);dispatch({type:STUDENT_LOADED,payload:res.data});}catch(err){dispatch({type:AUTH_ERROR});}};// Load User\nexport const loadFaculty=()=>async dispatch=>{if(localStorage.token){setAuthToken(localStorage.token);}try{const res=await axios.get(\"/api/faculty/current\");// console.log(\"inside load\");\n// console.log(res.data);\ndispatch({type:FACULTY_LOADED,payload:res.data});}catch(err){dispatch({type:AUTH_ERROR});}};// Register student\nexport const studentRegister=_ref=>{let{email,password,roll,name,dept,year}=_ref;return async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};const body=JSON.stringify({email,password,roll,name,dept,year});try{const res=await axios.post(\"/api/student/register\",body,config);dispatch({type:REGISTER_SUCCESS,payload:res.data});dispatch(loadStudent());}catch(err){const errors=err.response.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")));}dispatch({type:REGISTER_FAIL});}};};// Register faculty\nexport const facultyRegister=_ref2=>{let{email,password,name,dept}=_ref2;return async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};const body=JSON.stringify({email,password,name,dept});try{const res=await axios.post(\"/api/faculty/register\",body,config);dispatch({type:REGISTER_SUCCESS,payload:res.data});dispatch(loadFaculty());}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")));}dispatch({type:REGISTER_FAIL});}};};// Login student\nexport const loginStudent=(email,password)=>async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};const body=JSON.stringify({email,password});try{const res=await axios.post(\"/api/student/login\",body,config);console.log(\"inside login\");console.log(res.token);dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(loadStudent());}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")));}dispatch({type:LOGIN_FAIL});}};// Login faculty\nexport const loginFaculty=(email,password)=>async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};const body=JSON.stringify({email,password});try{const res=await axios.post(\"/api/faculty/login\",body,config);console.log(\"inside login\");console.log(res);console.log(res.data.token);dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(loadFaculty());}catch(err){console.log(err.response);const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,\"danger\")));}dispatch({type:LOGIN_FAIL});}};// Logout / Clear Profile\nexport const logout=()=>dispatch=>{dispatch({type:CLEAR_PROFILE});dispatch({type:LOGOUT});};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","STUDENT_LOADED","FACULTY_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadStudent","dispatch","localStorage","token","res","get","console","log","data","type","payload","err","loadFaculty","studentRegister","_ref","email","password","roll","name","dept","year","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","facultyRegister","_ref2","loginStudent","loginFaculty","logout"],"sources":["E:/attendencemgmt/Attendance-Management-SQL/client/src/actions/auth.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  STUDENT_LOADED,\r\n  FACULTY_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n// Load User\r\nexport const loadStudent = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(`/api/student/current`);\r\n\r\n    console.log(\"inside load\");\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: STUDENT_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Load User\r\nexport const loadFaculty = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`/api/faculty/current`);\r\n\r\n    // console.log(\"inside load\");\r\n    // console.log(res.data);\r\n\r\n    dispatch({\r\n      type: FACULTY_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register student\r\nexport const studentRegister =\r\n  ({ email, password, roll, name, dept, year }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password, roll, name, dept, year });\r\n\r\n    try {\r\n      const res = await axios.post(`/api/student/register`, body, config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(loadStudent());\r\n    } catch (err) {\r\n      const errors = err.response.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\n// Register faculty\r\nexport const facultyRegister =\r\n  ({ email, password, name, dept }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password, name, dept });\r\n\r\n    try {\r\n      const res = await axios.post(`/api/faculty/register`, body, config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(loadFaculty());\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\n// Login student\r\nexport const loginStudent = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(`/api/student/login`, body, config);\r\n\r\n    console.log(\"inside login\");\r\n    console.log(res.token);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadStudent());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login faculty\r\nexport const loginFaculty = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(`/api/faculty/login`, body, config);\r\n\r\n    console.log(\"inside login\");\r\n    console.log(res);\r\n    console.log(res.data.token);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadFaculty());\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}