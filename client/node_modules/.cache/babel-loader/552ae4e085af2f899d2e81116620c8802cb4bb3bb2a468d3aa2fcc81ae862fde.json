{"ast":null,"code":"import { GET_COURSE, GET_COURSES_FACULTY, POST_ERROR, GET_ATTENDANCE, GET_STUDENTS, MARK, GET_STUDENT_ATTENDANCE, GET_COMMENTS, ADD_COMMENT, UPDATE, ARCHIVE, UNARCHIVE, ADD_POST } from \"../actions/types\";\nconst initialState = {\n  attendance: [],\n  studentRecords: [],\n  comments: [],\n  comment: null,\n  courses: [],\n  students: [],\n  course: null,\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_COURSES_FACULTY:\n      return {\n        ...state,\n        courses: payload,\n        loading: false\n      };\n    case GET_ATTENDANCE:\n      return {\n        ...state,\n        attendance: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        courses: [payload, ...state.courses],\n        loading: false\n      };\n    case GET_STUDENT_ATTENDANCE:\n      return {\n        ...state,\n        studentRecords: payload,\n        loading: false\n      };\n    case GET_STUDENTS:\n      return {\n        ...state,\n        students: payload,\n        loading: false\n      };\n    case GET_COMMENTS:\n      return {\n        ...state,\n        comments: payload,\n        loading: false\n      };\n    case GET_COURSE:\n      return {\n        ...state,\n        course: payload,\n        loading: false\n      };\n    case MARK:\n      return {\n        ...state,\n        attendance: [payload, ...state.attendance],\n        loading: false\n      };\n    case UPDATE:\n      return {\n        ...state,\n        attendance: state.attendance.map(record => record.id === payload.id ? payload : record),\n        loading: false\n      };\n    case ARCHIVE:\n      return {\n        ...state,\n        courses: state.courses.map(record => record.id === payload.id ? payload : record),\n        loading: false\n      };\n    case UPDATE:\n      return {\n        ...state,\n        courses: state.courses.map(record => record.id === payload.id ? payload : record),\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        comment: [payload, ...state.comments],\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_COURSE","GET_COURSES_FACULTY","POST_ERROR","GET_ATTENDANCE","GET_STUDENTS","MARK","GET_STUDENT_ATTENDANCE","GET_COMMENTS","ADD_COMMENT","UPDATE","ARCHIVE","UNARCHIVE","ADD_POST","initialState","attendance","studentRecords","comments","comment","courses","students","course","post","loading","error","state","arguments","length","undefined","action","type","payload","map","record","id"],"sources":["E:/attendencemgmt/Attendance-Management-SQL/client/src/reducers/faculty.js"],"sourcesContent":["import {\r\n  GET_COURSE,\r\n  GET_COURSES_FACULTY,\r\n  POST_ERROR,\r\n  GET_ATTENDANCE,\r\n  GET_STUDENTS,\r\n  MARK,\r\n  GET_STUDENT_ATTENDANCE,\r\n  GET_COMMENTS,\r\n  ADD_COMMENT,\r\n  UPDATE,\r\n  ARCHIVE,\r\n  UNARCHIVE,\r\n  ADD_POST,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  attendance: [],\r\n  studentRecords: [],\r\n  comments: [],\r\n  comment: null,\r\n  courses: [],\r\n  students: [],\r\n  course: null,\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_COURSES_FACULTY:\r\n      return {\r\n        ...state,\r\n        courses: payload,\r\n        loading: false,\r\n      };\r\n    case GET_ATTENDANCE:\r\n      return {\r\n        ...state,\r\n        attendance: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        courses: [payload, ...state.courses],\r\n        loading: false,\r\n      };\r\n    case GET_STUDENT_ATTENDANCE:\r\n      return {\r\n        ...state,\r\n        studentRecords: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_STUDENTS:\r\n      return {\r\n        ...state,\r\n        students: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: payload,\r\n        loading: false,\r\n      };\r\n    case GET_COURSE:\r\n      return {\r\n        ...state,\r\n        course: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case MARK:\r\n      return {\r\n        ...state,\r\n        attendance: [payload, ...state.attendance],\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE:\r\n      return {\r\n        ...state,\r\n        attendance: state.attendance.map((record) =>\r\n          record.id === payload.id ? payload : record\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case ARCHIVE:\r\n      return {\r\n        ...state,\r\n        courses: state.courses.map((record) =>\r\n          record.id === payload.id ? payload : record\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE:\r\n      return {\r\n        ...state,\r\n        courses: state.courses.map((record) =>\r\n          record.id === payload.id ? payload : record\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        comment: [payload, ...state.comments],\r\n        loading: false,\r\n      };\r\n\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}