{"ast":null,"code":"import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import{connect}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{component:Component,auth:{isAuthenticated,loading},...rest}=_ref;return/*#__PURE__*/_jsx(Route,{...rest,render:props=>isAuthenticated?/*#__PURE__*/_jsx(Component,{...props}):/*#__PURE__*/_jsx(Redirect,{to:\"/login\"})});};const mapStateToProps=state=>({auth:state.auth});export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"names":["React","Route","Redirect","connect","jsx","_jsx","PrivateRoute","_ref","component","Component","auth","isAuthenticated","loading","rest","render","props","to","mapStateToProps","state"],"sources":["E:/attendencemgmt/Attendance-Management-SQL/client/src/components/routing/PrivateRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAElD,OAASC,OAAO,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,YAAY,CAAGC,IAAA,MAAC,CACpBC,SAAS,CAAEC,SAAS,CACpBC,IAAI,CAAE,CAAEC,eAAe,CAAEC,OAAQ,CAAC,CAClC,GAAGC,IACL,CAAC,CAAAN,IAAA,oBACCF,IAAA,CAACJ,KAAK,KACAY,IAAI,CACRC,MAAM,CAAGC,KAAK,EACZJ,eAAe,cAAGN,IAAA,CAACI,SAAS,KAAKM,KAAK,CAAG,CAAC,cAAGV,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAAE,CACrE,CACF,CAAC,EACH,CAMD,KAAM,CAAAC,eAAe,CAAIC,KAAK,GAAM,CAClCR,IAAI,CAAEQ,KAAK,CAACR,IACd,CAAC,CAAC,CAEF,cAAe,CAAAP,OAAO,CAACc,eAAe,CAAC,CAACX,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}