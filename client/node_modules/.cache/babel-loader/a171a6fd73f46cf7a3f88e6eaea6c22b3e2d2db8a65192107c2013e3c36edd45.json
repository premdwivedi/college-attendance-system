{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, STUDENT_LOADED, FACULTY_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// Load User\nexport const loadStudent = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(`/api/student/current`);\n    console.log(\"inside load\");\n    console.log(res.data);\n    dispatch({\n      type: STUDENT_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Load User\nexport const loadFaculty = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(`/api/faculty/current`);\n\n    // console.log(\"inside load\");\n    // console.log(res.data);\n\n    dispatch({\n      type: FACULTY_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register student\nexport const studentRegister = _ref => {\n  let {\n    email,\n    password,\n    roll,\n    name,\n    dept,\n    year\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password,\n      roll,\n      name,\n      dept,\n      year\n    });\n    try {\n      const res = await axios.post(`/api/student/register`, body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadStudent());\n    } catch (err) {\n      const errors = err.response.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};\n\n// Register faculty\nexport const facultyRegister = _ref2 => {\n  let {\n    email,\n    password,\n    name,\n    dept\n  } = _ref2;\n  return async dispatch => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password,\n      name,\n      dept\n    });\n    try {\n      const res = await axios.post(`/api/faculty/register`, body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadFaculty());\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};\n\n// Login student\nexport const loginStudent = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post(`/api/student/login`, body, config);\n    console.log(\"inside login\");\n    console.log(res.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadStudent());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Login faculty\nexport const loginFaculty = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post(`/api/faculty/login`, body, config);\n    console.log(\"inside login\");\n    console.log(res);\n    console.log(res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadFaculty());\n  } catch (err) {\n    console.log(err.response);\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout / Clear Profile\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","STUDENT_LOADED","FACULTY_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadStudent","dispatch","localStorage","token","res","get","console","log","data","type","payload","err","loadFaculty","studentRegister","_ref","email","password","roll","name","dept","year","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","facultyRegister","_ref2","loginStudent","loginFaculty","logout"],"sources":["E:/attendencemgmt/Attendance-Management-SQL/client/src/actions/auth.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  STUDENT_LOADED,\r\n  FACULTY_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n// Load User\r\nexport const loadStudent = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(`/api/student/current`);\r\n\r\n    console.log(\"inside load\");\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: STUDENT_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Load User\r\nexport const loadFaculty = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(`/api/faculty/current`);\r\n\r\n    // console.log(\"inside load\");\r\n    // console.log(res.data);\r\n\r\n    dispatch({\r\n      type: FACULTY_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register student\r\nexport const studentRegister =\r\n  ({ email, password, roll, name, dept, year }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password, roll, name, dept, year });\r\n\r\n    try {\r\n      const res = await axios.post(`/api/student/register`, body, config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(loadStudent());\r\n    } catch (err) {\r\n      const errors = err.response.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\n// Register faculty\r\nexport const facultyRegister =\r\n  ({ email, password, name, dept }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password, name, dept });\r\n\r\n    try {\r\n      const res = await axios.post(`/api/faculty/register`, body, config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(loadFaculty());\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\n// Login student\r\nexport const loginStudent = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(`/api/student/login`, body, config);\r\n\r\n    console.log(\"inside login\");\r\n    console.log(res.token);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadStudent());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login faculty\r\nexport const loginFaculty = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(`/api/faculty/login`, body, config);\r\n\r\n    console.log(\"inside login\");\r\n    console.log(res);\r\n    console.log(res.data.token);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadFaculty());\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}