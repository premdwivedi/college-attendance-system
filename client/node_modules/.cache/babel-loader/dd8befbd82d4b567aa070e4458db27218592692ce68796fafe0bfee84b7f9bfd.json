{"ast":null,"code":"import axios from\"axios\";import{setAlert}from\"./alert\";import{GET_COURSES_STUDENT,GET_COURSE,POST_ERROR,GET_ATTENDANCE,GET_COURSES_FACULTY,GET_STUDENTS,MARK,GET_STUDENT_ATTENDANCE,UPDATE,GET_COMMENTS,ADD_COMMENT,ADD_POST,UNARCHIVE,ARCHIVE,FACULTY_LOADED}from\"./types\";const BASE_URL=\"http:localhost:5000\";//Get subjects\nexport const getCourses=()=>async dispatch=>{try{const res=await axios.get(\"/api/faculty/courses\");dispatch({type:GET_COURSES_FACULTY,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response}});}};// Get attendance for a course\nexport const getAttendance=course=>async dispatch=>{try{const res=await axios.get(\"/api/faculty/students/\".concat(course));dispatch({type:GET_ATTENDANCE,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response}});}};// Get attendance for a course\nexport const getStudents=year=>async dispatch=>{try{const res=await axios.get(\"/api/faculty/students/\".concat(year));dispatch({type:GET_STUDENTS,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response}});}};// Get attendance for a course\nexport const getStudentAttendance=(year,roll,course)=>async dispatch=>{try{const res=await axios.get(\"/api/faculty/attendance/\".concat(year,\"/\").concat(roll,\"/\").concat(course));dispatch({type:GET_STUDENT_ATTENDANCE,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response}});}};// Add post\nexport const addPost=formData=>async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};try{const res=await axios.post(\"/api/faculty/courses\",formData,config);dispatch({type:ADD_POST,payload:res.data});dispatch(setAlert(\"Course Created\",\"success\"));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response.status}});}};// Get attendance for a course\nexport const markAttendance=(year,roll,course,_ref)=>{let{date,status}=_ref;return async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};const formData=JSON.stringify({date,status});try{const res=await axios.post(\"/api/faculty/attendance/\".concat(year,\"/\").concat(roll,\"/\").concat(course),formData,config);console.log(\"FIRING\");dispatch({type:MARK,payload:res.data});dispatch(setAlert(\"Attendance marked\",\"success\"));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response}});}};};// Get attendance for a course\nexport const updateAttendance=(year,roll,course,date,_ref2)=>{let{status}=_ref2;return async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};const formData=JSON.stringify({status});console.log(\"FIRING\");try{const res=await axios.put(\"/api/faculty/attendance/\".concat(year,\"/\").concat(roll,\"/\").concat(course,\"/\").concat(date),formData,config);console.log(\"FIRING\");dispatch({type:UPDATE,payload:res.data});dispatch(setAlert(\"Attendance updated\",\"success\"));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response}});}};};// Get attendance for a course\nexport const archive=(course,year)=>async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};console.log(\"FIRING\");try{const res=await axios.put(\"/api/faculty/archive/\".concat(course,\"/\").concat(year),config);console.log(\"FIRING\");dispatch({type:ARCHIVE,payload:res.data});dispatch(setAlert(\"Archived\",\"success\"));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response}});}};// Get attendance for a course\nexport const unarchive=(course,year)=>async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};console.log(\"FIRING\");try{const res=await axios.put(\"/api/faculty/unarchive/\".concat(course,\"/\").concat(year),config);console.log(\"FIRING\");dispatch({type:UNARCHIVE,payload:res.data});dispatch(setAlert(\"Unarchived\",\"success\"));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response}});}};// Get comment\nexport const getComments=(course,year)=>async dispatch=>{try{const res=await axios.get(\"/api/faculty/chat/\".concat(course,\"/\").concat(year));dispatch({type:GET_COMMENTS,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add post\nexport const addComment=(formData,course,year)=>async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};console.log(\"WORKS\");try{const res=await axios.post(\"/api/faculty/chat/\".concat(course,\"/\").concat(year),formData,config);console.log(\"FIRING\");dispatch({type:ADD_COMMENT,payload:res.data});dispatch(setAlert(\"Comment Created\",\"success\"));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response,status:err.response.status}});}};","map":{"version":3,"names":["axios","setAlert","GET_COURSES_STUDENT","GET_COURSE","POST_ERROR","GET_ATTENDANCE","GET_COURSES_FACULTY","GET_STUDENTS","MARK","GET_STUDENT_ATTENDANCE","UPDATE","GET_COMMENTS","ADD_COMMENT","ADD_POST","UNARCHIVE","ARCHIVE","FACULTY_LOADED","BASE_URL","getCourses","dispatch","res","get","type","payload","data","err","msg","response","status","getAttendance","course","concat","getStudents","year","getStudentAttendance","roll","addPost","formData","config","headers","post","markAttendance","_ref","date","JSON","stringify","console","log","updateAttendance","_ref2","put","archive","unarchive","getComments","statusText","addComment"],"sources":["E:/attendencemgmt/Attendance-Management-SQL/client/src/actions/faculty.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_COURSES_STUDENT,\r\n  GET_COURSE,\r\n  POST_ERROR,\r\n  GET_ATTENDANCE,\r\n  GET_COURSES_FACULTY,\r\n  GET_STUDENTS,\r\n  MARK,\r\n  GET_STUDENT_ATTENDANCE,\r\n  UPDATE,\r\n  GET_COMMENTS,\r\n  ADD_COMMENT,\r\n  ADD_POST,\r\n  UNARCHIVE,\r\n  ARCHIVE,\r\n  FACULTY_LOADED,\r\n} from \"./types\";\r\n\r\nconst BASE_URL = \"http:localhost:5000\";\r\n\r\n//Get subjects\r\nexport const getCourses = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/faculty/courses`);\r\n\r\n    dispatch({\r\n      type: GET_COURSES_FACULTY,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// Get attendance for a course\r\nexport const getAttendance = (course) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/faculty/students/${course}`);\r\n\r\n    dispatch({\r\n      type: GET_ATTENDANCE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// Get attendance for a course\r\nexport const getStudents = (year) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/faculty/students/${year}`);\r\n\r\n    dispatch({\r\n      type: GET_STUDENTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// Get attendance for a course\r\nexport const getStudentAttendance =\r\n  (year, roll, course) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `/api/faculty/attendance/${year}/${roll}/${course}`\r\n      );\r\n\r\n      dispatch({\r\n        type: GET_STUDENT_ATTENDANCE,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response },\r\n      });\r\n    }\r\n  };\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(`/api/faculty/courses`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Course Created\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get attendance for a course\r\nexport const markAttendance =\r\n  (year, roll, course, { date, status }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const formData = JSON.stringify({ date, status });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `/api/faculty/attendance/${year}/${roll}/${course}`,\r\n        formData,\r\n        config\r\n      );\r\n      console.log(\"FIRING\");\r\n      dispatch({\r\n        type: MARK,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Attendance marked\", \"success\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response },\r\n      });\r\n    }\r\n  };\r\n\r\n// Get attendance for a course\r\nexport const updateAttendance =\r\n  (year, roll, course, date, { status }) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const formData = JSON.stringify({ status });\r\n    console.log(\"FIRING\");\r\n    try {\r\n      const res = await axios.put(\r\n        `/api/faculty/attendance/${year}/${roll}/${course}/${date}`,\r\n        formData,\r\n        config\r\n      );\r\n      console.log(\"FIRING\");\r\n      dispatch({\r\n        type: UPDATE,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(setAlert(\"Attendance updated\", \"success\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_ERROR,\r\n        payload: { msg: err.response, status: err.response },\r\n      });\r\n    }\r\n  };\r\n\r\n// Get attendance for a course\r\nexport const archive = (course, year) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  console.log(\"FIRING\");\r\n  try {\r\n    const res = await axios.put(\r\n      `/api/faculty/archive/${course}/${year}`,\r\n      config\r\n    );\r\n    console.log(\"FIRING\");\r\n    dispatch({\r\n      type: ARCHIVE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Archived\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// Get attendance for a course\r\nexport const unarchive = (course, year) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  console.log(\"FIRING\");\r\n  try {\r\n    const res = await axios.put(\r\n      `/api/faculty/unarchive/${course}/${year}`,\r\n      config\r\n    );\r\n    console.log(\"FIRING\");\r\n    dispatch({\r\n      type: UNARCHIVE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Unarchived\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response },\r\n    });\r\n  }\r\n};\r\n\r\n// Get comment\r\nexport const getComments = (course, year) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/faculty/chat/${course}/${year}`);\r\n\r\n    dispatch({\r\n      type: GET_COMMENTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addComment = (formData, course, year) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  console.log(\"WORKS\");\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/faculty/chat/${course}/${year}`,\r\n      formData,\r\n      config\r\n    );\r\n    console.log(\"FIRING\");\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Created\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}